# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

jobs:
- job: 'BuildMacDmg'
  pool:
    vmImage: 'macOS-10.15'

  steps:
  - task: InstallAppleCertificate@2
    inputs:
      certSecureFile: 'Mobsya.p12'
      certPwd: $(mobsya-mac-p12)
      
  - script: |
      pip3 install -U py2app
      pip3 install thymiodirect websockets websocket websocket_client qrcode
      pip3 install pyobjc-core
      pip3 install pyobjc-framework-cocoa
      make VPLServer.dmg
    displayName: 'Make dmg'
    
  - task: CopyFiles@2
    inputs:
      targetFolder: '$(Build.ArtifactStagingDirectory)'
      contents: '*.dmg'
      
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: 'VPLServer.dmg'



- job: 'BuildWindows'
  pool:
    vmImage: 'windows-2019'

  steps:
  - script: echo Hello, world!
    displayName: 'Run a one-line script'

  - script: |
      pip install -U py2app
      pip install --upgrade cx_Freeze
      pip install thymiodirect websockets websocket websocket_client qrcode
      pip install tk
      python 
    displayName: 'Install with pip'

  - task: PowerShell@2
    inputs:
      filePath: 'build-win.ps1'
      
  - task: CopyFiles@2
    inputs:
      targetFolder: '$(Build.ArtifactStagingDirectory)'
      contents: '*.zip'
      
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: 'VPLServerWin.zip'

